// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import (
	"github.com/kjk/flex"
)

{{ range . -}}

func (block *BlockElement) {{ .Name }}Top({{ .Param }} {{ .Type }}) *BlockElement {
	block.getFlexNode().StyleSet{{ .NameInternal }}(flex.EdgeTop, {{ .TypeInternal }}({{ .Param }}))

	return block
}

func (block *BlockElement) {{ .Name }}Right({{ .Param }} {{ .Type }}) *BlockElement {
	block.getFlexNode().StyleSet{{ .NameInternal }}(flex.EdgeRight, {{ .TypeInternal }}({{ .Param }}))

	return block
}

func (block *BlockElement) {{ .Name }}Bottom({{ .Param }} {{ .Type }}) *BlockElement {
	block.getFlexNode().StyleSet{{ .NameInternal }}(flex.EdgeBottom, {{ .TypeInternal }}({{ .Param }}))

	return block
}

func (block *BlockElement) {{ .Name }}Left({{ .Param }} {{ .Type }}) *BlockElement {
	block.getFlexNode().StyleSet{{ .NameInternal }}(flex.EdgeLeft, {{ .TypeInternal }}({{ .Param }}))

	return block
}
{{if or (eq .GetFunctionType "withGet") (eq .GetFunctionType "withProp")}}

func (block *BlockElement) Get{{ .Name }}Top() {{ .Type }} {
	return {{ .Type }}(block.getFlexNode().{{ if eq .GetFunctionType "withGet" }}StyleGet{{ .NameInternal }}(flex.EdgeTop).Value){{ else }}Style.{{ .NameInternal }}[flex.EdgeTop].Value{{ end }}
}

func (block *BlockElement) Get{{ .Name }}Right() {{ .Type }} {
	return {{ .Type }}(block.getFlexNode().StyleGet{{ .NameInternal }}(flex.EdgeRight).Value)
}

func (block *BlockElement) Get{{ .Name }}Bottom() {{ .Type }} {
	return {{ .Type }}(block.getFlexNode().StyleGet{{ .NameInternal }}(flex.EdgeBottom).Value)
}

func (block *BlockElement) Get{{ .Name }}Left() {{ .Type }} {
	return {{ .Type }}(block.getFlexNode().StyleGet{{ .NameInternal }}(flex.EdgeLeft).Value)
}

{{ end }}

func (block *BlockElement) {{ .Name }}(top {{ .Type }}, right {{ .Type }}, bottom {{ .Type }}, left {{ .Type }}) *BlockElement {
	block.
		{{ .Name }}Top(top).
		{{ .Name }}Right(right).
		{{ .Name }}Bottom(bottom).
		{{ .Name }}Left(left)

	return block
}

func (block *BlockElement) {{ .Name }}Vertical({{ .Param }} {{ .Type }}) *BlockElement {
	block.
		{{ .Name }}Top({{ .Param }}).
		{{ .Name }}Bottom({{ .Param }})

	return block
}

func (block *BlockElement) {{ .Name }}Horizontal({{ .Param }} {{ .Type }}) *BlockElement {
	block.
		{{ .Name }}Left({{ .Param }}).
		{{ .Name }}Right({{ .Param }})

	return block
}

func (block *BlockElement) {{ .Name }}All({{ .Param }} {{ .Type }}) *BlockElement {
	block.
		{{ .Name }}Top({{ .Param }}).
		{{ .Name }}Right({{ .Param }}).
		{{ .Name }}Bottom({{ .Param }}).
		{{ .Name }}Left({{ .Param }})

	return block
}

{{ end }}