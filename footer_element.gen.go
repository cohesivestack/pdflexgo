// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import (
	"github.com/kjk/flex"
)

// MARGIN

func (footer *Footer) MarginTop(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMargin(flex.EdgeTop, float32(margin))
	return footer
}
func (footer *Footer) MarginRight(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMargin(flex.EdgeRight, float32(margin))
	return footer
}
func (footer *Footer) MarginBottom(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMargin(flex.EdgeBottom, float32(margin))
	return footer
}
func (footer *Footer) MarginLeft(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMargin(flex.EdgeLeft, float32(margin))
	return footer
}
func (footer *Footer) MarginHorizontal(margin float64) *Footer {
	footer.MarginLeft(margin).MarginRight(margin)
	return footer
}
func (footer *Footer) MarginVertical(margin float64) *Footer {
	footer.delegated.MarginTop(margin).MarginBottom(margin)
	return footer
}
func (footer *Footer) MarginAll(margin float64) *Footer {
	footer.delegated.MarginHorizontal(margin).MarginVertical(margin)
	return footer
}
func (footer *Footer) Margin(top float64, right float64, bottom float64, left float64) *Footer {
	footer.delegated.
		MarginTop(top).
		MarginRight(right).
		MarginBottom(bottom).
		MarginLeft(left)
	return footer
}

// MARGIN PERCENT

func (footer *Footer) MarginPercentTop(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMarginPercent(flex.EdgeTop, float32(margin))
	return footer
}

func (footer *Footer) MarginPercentRight(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMarginPercent(flex.EdgeRight, float32(margin))
	return footer
}

func (footer *Footer) MarginPercentBottom(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMarginPercent(flex.EdgeBottom, float32(margin))
	return footer
}

func (footer *Footer) MarginPercentLeft(margin float64) *Footer {
	footer.delegated.getFlexNode().StyleSetMarginPercent(flex.EdgeLeft, float32(margin))
	return footer
}

func (footer *Footer) MarginPercentHorizontal(margin float64) *Footer {
	footer.delegated.MarginPercentLeft(margin).MarginPercentRight(margin)
	return footer
}

func (footer *Footer) MarginPercentVertical(margin float64) *Footer {
	footer.delegated.MarginPercentTop(margin).MarginPercentBottom(margin)
	return footer
}

func (footer *Footer) MarginPercentAll(margin float64) *Footer {
	footer.delegated.MarginPercentHorizontal(margin).MarginPercentVertical(margin)
	return footer
}

// PADDING

// For Padding

func (footer *Footer) PaddingTop(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPadding(flex.EdgeTop, float32(padding))
	return footer
}

func (footer *Footer) PaddingRight(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPadding(flex.EdgeRight, float32(padding))
	return footer
}

func (footer *Footer) PaddingBottom(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPadding(flex.EdgeBottom, float32(padding))
	return footer
}

func (footer *Footer) PaddingLeft(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPadding(flex.EdgeLeft, float32(padding))
	return footer
}

func (footer *Footer) PaddingHorizontal(padding float64) *Footer {
	footer.delegated.PaddingLeft(padding).PaddingRight(padding)
	return footer
}

func (footer *Footer) PaddingVertical(padding float64) *Footer {
	footer.delegated.PaddingTop(padding).PaddingBottom(padding)
	return footer
}

func (footer *Footer) PaddingAll(padding float64) *Footer {
	footer.delegated.PaddingHorizontal(padding).PaddingVertical(padding)
	return footer
}

func (footer *Footer) Padding(top float64, right float64, bottom float64, left float64) *Footer {
	footer.delegated.
		PaddingTop(top).
		PaddingRight(right).
		PaddingBottom(bottom).
		PaddingLeft(left)
	return footer
}

// PADDING PERCENT

func (footer *Footer) PaddingPercentTop(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPaddingPercent(flex.EdgeTop, float32(padding))
	return footer
}

func (footer *Footer) PaddingPercentRight(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPaddingPercent(flex.EdgeRight, float32(padding))
	return footer
}

func (footer *Footer) PaddingPercentBottom(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPaddingPercent(flex.EdgeBottom, float32(padding))
	return footer
}

func (footer *Footer) PaddingPercentLeft(padding float64) *Footer {
	footer.delegated.getFlexNode().StyleSetPaddingPercent(flex.EdgeLeft, float32(padding))
	return footer
}

func (footer *Footer) PaddingPercentHorizontal(padding float64) *Footer {
	footer.delegated.PaddingPercentLeft(padding).PaddingPercentRight(padding)
	return footer
}

func (footer *Footer) PaddingPercentVertical(padding float64) *Footer {
	footer.delegated.PaddingPercentTop(padding).PaddingPercentBottom(padding)
	return footer
}

func (footer *Footer) PaddingPercentAll(padding float64) *Footer {
	footer.delegated.PaddingPercentHorizontal(padding).PaddingPercentVertical(padding)
	return footer
}

func (footer *Footer) PaddingPercent(top float64, right float64, bottom float64, left float64) *Footer {
	footer.delegated.
		PaddingPercentTop(top).
		PaddingPercentRight(right).
		PaddingPercentBottom(bottom).
		PaddingPercentLeft(left)
	return footer
}

// BORDERWIDTH

func (footer *Footer) BorderWidthTop(borderWidth float64) *Footer {
	footer.delegated.getFlexNode().StyleSetBorder(flex.EdgeTop, float32(borderWidth))
	return footer
}

func (footer *Footer) BorderWidthRight(borderWidth float64) *Footer {
	footer.delegated.getFlexNode().StyleSetBorder(flex.EdgeRight, float32(borderWidth))
	return footer
}

func (footer *Footer) BorderWidthBottom(borderWidth float64) *Footer {
	footer.delegated.getFlexNode().StyleSetBorder(flex.EdgeBottom, float32(borderWidth))
	return footer
}

func (footer *Footer) BorderWidthLeft(borderWidth float64) *Footer {
	footer.delegated.getFlexNode().StyleSetBorder(flex.EdgeLeft, float32(borderWidth))
	return footer
}

func (footer *Footer) BorderWidthHorizontal(borderWidth float64) *Footer {
	footer.delegated.BorderWidthLeft(borderWidth).BorderWidthRight(borderWidth)
	return footer
}

func (footer *Footer) BorderWidthVertical(borderWidth float64) *Footer {
	footer.delegated.BorderWidthTop(borderWidth).BorderWidthBottom(borderWidth)
	return footer
}

func (footer *Footer) BorderWidthAll(borderWidth float64) *Footer {
	footer.delegated.BorderWidthHorizontal(borderWidth).BorderWidthVertical(borderWidth)
	return footer
}

func (footer *Footer) BorderWidth(top float64, right float64, bottom float64, left float64) *Footer {
	footer.delegated.
		BorderWidthTop(top).
		BorderWidthRight(right).
		BorderWidthBottom(bottom).
		BorderWidthLeft(left)
	return footer
}

// BACKGROUND

func (footer *Footer) BackgroundColor(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.backgroundColor = getRgba(red, green, blue, alpha...)
	return footer
}

// BORDER COLOR

func (footer *Footer) BorderColorTop(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.borderColor[EdgeTop] = getRgba(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorRight(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.borderColor[EdgeRight] = getRgba(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorBottom(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.borderColor[EdgeBottom] = getRgba(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorLeft(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.borderColor[EdgeLeft] = getRgba(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorHorizontal(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.
		BorderColorLeft(red, green, blue, alpha...).
		BorderColorRight(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorVertical(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.
		BorderColorTop(red, green, blue, alpha...).
		BorderColorBottom(red, green, blue, alpha...)
	return footer
}

func (footer *Footer) BorderColorAll(red int, green int, blue int, alpha ...float64) *Footer {
	footer.delegated.
		BorderColorHorizontal(red, green, blue, alpha...).
		BorderColorVertical(red, green, blue, alpha...)
	return footer
}
