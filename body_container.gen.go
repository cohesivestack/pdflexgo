// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import "github.com/kjk/flex"

// CHILDREN

func (body *Body) Children(children ...Node) *Body {

	for _, child := range children {
		body.delegated.getFlexNode().InsertChild(child.getFlexNode(), len(body.delegated.getFlexNode().Children))
		body.delegated.children = append(body.delegated.children, child)
	}

	return body
}

// DIRECTION

func (body *Body) Direction(direction Direction) *Body {
	body.delegated.getFlexNode().StyleSetDirection(flex.Direction(direction))
	return body
}

func (body *Body) DirectionInherit() *Body {
	body.delegated.Direction(DirectionInherit)
	return body
}

func (body *Body) DirectionLTR() *Body {
	body.delegated.Direction(DirectionLTR)
	return body
}

func (body *Body) DirectionRTL() *Body {
	body.delegated.Direction(DirectionRTL)
	return body
}

// FLEX DIRECTION

func (body *Body) FlexDirection(direction FlexDirection) *Body {
	body.delegated.getFlexNode().StyleSetFlexDirection(flex.FlexDirection(direction))
	return body
}

func (body *Body) FlexDirectionColumn() *Body {
	body.delegated.FlexDirection(FlexDirectionColumn)
	return body
}

func (body *Body) FlexDirectionColumnReverse() *Body {
	body.delegated.FlexDirection(FlexDirectionColumnReverse)
	return body
}

func (body *Body) FlexDirectionRow() *Body {
	body.delegated.FlexDirection(FlexDirectionRow)
	return body
}

func (body *Body) FlexDirectionRowReverse() *Body {
	body.delegated.FlexDirection(FlexDirectionRowReverse)
	return body
}

// JustifyContent
func (body *Body) JustifyContent(justification Justify) *Body {
	body.delegated.getFlexNode().StyleSetJustifyContent(flex.Justify(justification))
	return body
}

func (body *Body) JustifyContentStart() *Body {
	body.delegated.JustifyContent(JustifyStart)
	return body
}

func (body *Body) JustifyContentCenter() *Body {
	body.delegated.JustifyContent(JustifyCenter)
	return body
}

func (body *Body) JustifyContentEnd() *Body {
	body.delegated.JustifyContent(JustifyEnd)
	return body
}

func (body *Body) JustifyContentSpaceBetween() *Body {
	body.delegated.JustifyContent(JustifySpaceBetween)
	return body
}

func (body *Body) JustifyContentSpaceAround() *Body {
	body.delegated.JustifyContent(JustifySpaceAround)
	return body
}

// ALIGN CONTENT

func (body *Body) AlignContentType(align Align) *Body {
	body.delegated.getFlexNode().StyleSetAlignContent(flex.Align(align))
	return body
}

func (body *Body) AlignContentAuto() *Body {
	body.delegated.AlignContentType(AlignAuto)
	return body
}

func (body *Body) AlignContentStart() *Body {
	body.delegated.AlignContentType(AlignStart)
	return body
}

func (body *Body) AlignContentCenter() *Body {
	body.delegated.AlignContentType(AlignCenter)
	return body
}

func (body *Body) AlignContentEnd() *Body {
	body.delegated.AlignContentType(AlignEnd)
	return body
}

func (body *Body) AlignContentStretch() *Body {
	body.delegated.AlignContentType(AlignStretch)
	return body
}

func (body *Body) AlignContentBaseline() *Body {
	body.delegated.AlignContentType(AlignBaseline)
	return body
}

func (body *Body) AlignContentSpaceBetween() *Body {
	body.delegated.AlignContentType(AlignSpaceBetween)
	return body
}

func (body *Body) AlignContentSpaceAround() *Body {
	body.delegated.AlignContentType(AlignSpaceAround)
	return body
}

// ALIGN ITEMS

func (body *Body) AlignItemsType(align Align) *Body {
	body.delegated.getFlexNode().StyleSetAlignItems(flex.Align(align))
	return body
}

func (body *Body) AlignItemsAuto() *Body {
	body.delegated.AlignItemsType(AlignAuto)
	return body
}

func (body *Body) AlignItemsStart() *Body {
	body.delegated.AlignItemsType(AlignStart)
	return body
}

func (body *Body) AlignItemsCenter() *Body {
	body.delegated.AlignItemsType(AlignCenter)
	return body
}

func (body *Body) AlignItemsEnd() *Body {
	body.delegated.AlignItemsType(AlignEnd)
	return body
}

func (body *Body) AlignItemsStretch() *Body {
	body.delegated.AlignItemsType(AlignStretch)
	return body
}

func (body *Body) AlignItemsBaseline() *Body {
	body.delegated.AlignItemsType(AlignBaseline)
	return body
}

func (body *Body) AlignItemsSpaceBetween() *Body {
	body.delegated.AlignItemsType(AlignSpaceBetween)
	return body
}

func (body *Body) AlignItemsSpaceAround() *Body {
	body.delegated.AlignItemsType(AlignSpaceAround)
	return body
}

// FLEX WRAP

func (body *Body) FlexWrapValue(wrapValue Wrap) *Body {
	body.delegated.getFlexNode().StyleSetFlexWrap(flex.Wrap(wrapValue))
	return body
}

func (body *Body) FlexNoWrap() *Body {
	body.delegated.FlexWrapValue(WrapNoWrap)
	return body
}

func (body *Body) FlexWrap() *Body {
	body.delegated.FlexWrapValue(WrapWrap)
	return body
}

func (body *Body) FlexWrapReverse() *Body {
	body.delegated.FlexWrapValue(WrapWrapReverse)
	return body
}
