// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import (
	"github.com/kjk/flex"
)

func (element *TextElement) MarginTop(margin float64) *TextElement {
	element.getFlexNode().StyleSetMargin(flex.EdgeTop, float32(margin))

	return element
}

func (element *TextElement) MarginRight(margin float64) *TextElement {
	element.getFlexNode().StyleSetMargin(flex.EdgeRight, float32(margin))

	return element
}

func (element *TextElement) MarginBottom(margin float64) *TextElement {
	element.getFlexNode().StyleSetMargin(flex.EdgeBottom, float32(margin))

	return element
}

func (element *TextElement) MarginLeft(margin float64) *TextElement {
	element.getFlexNode().StyleSetMargin(flex.EdgeLeft, float32(margin))

	return element
}


func (element *TextElement) GetMarginTop() float64 {
	return float64(element.getFlexNode().StyleGetMargin(flex.EdgeTop).Value)
}

func (element *TextElement) GetMarginRight() float64 {
	return float64(element.getFlexNode().StyleGetMargin(flex.EdgeRight).Value)
}

func (element *TextElement) GetMarginBottom() float64 {
	return float64(element.getFlexNode().StyleGetMargin(flex.EdgeBottom).Value)
}

func (element *TextElement) GetMarginLeft() float64 {
	return float64(element.getFlexNode().StyleGetMargin(flex.EdgeLeft).Value)
}



func (element *TextElement) Margin(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		MarginTop(top).
		MarginRight(right).
		MarginBottom(bottom).
		MarginLeft(left)

	return element
}

func (element *TextElement) MarginVertical(margin float64) *TextElement {
	element.
		MarginTop(margin).
		MarginBottom(margin)

	return element
}

func (element *TextElement) MarginHorizontal(margin float64) *TextElement {
	element.
		MarginLeft(margin).
		MarginRight(margin)

	return element
}

func (element *TextElement) MarginAll(margin float64) *TextElement {
	element.
		MarginTop(margin).
		MarginRight(margin).
		MarginBottom(margin).
		MarginLeft(margin)

	return element
}

func (element *TextElement) MarginPercentTop(percent float64) *TextElement {
	element.getFlexNode().StyleSetMarginPercent(flex.EdgeTop, float32(percent))

	return element
}

func (element *TextElement) MarginPercentRight(percent float64) *TextElement {
	element.getFlexNode().StyleSetMarginPercent(flex.EdgeRight, float32(percent))

	return element
}

func (element *TextElement) MarginPercentBottom(percent float64) *TextElement {
	element.getFlexNode().StyleSetMarginPercent(flex.EdgeBottom, float32(percent))

	return element
}

func (element *TextElement) MarginPercentLeft(percent float64) *TextElement {
	element.getFlexNode().StyleSetMarginPercent(flex.EdgeLeft, float32(percent))

	return element
}


func (element *TextElement) MarginPercent(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		MarginPercentTop(top).
		MarginPercentRight(right).
		MarginPercentBottom(bottom).
		MarginPercentLeft(left)

	return element
}

func (element *TextElement) MarginPercentVertical(percent float64) *TextElement {
	element.
		MarginPercentTop(percent).
		MarginPercentBottom(percent)

	return element
}

func (element *TextElement) MarginPercentHorizontal(percent float64) *TextElement {
	element.
		MarginPercentLeft(percent).
		MarginPercentRight(percent)

	return element
}

func (element *TextElement) MarginPercentAll(percent float64) *TextElement {
	element.
		MarginPercentTop(percent).
		MarginPercentRight(percent).
		MarginPercentBottom(percent).
		MarginPercentLeft(percent)

	return element
}

func (element *TextElement) PaddingTop(padding float64) *TextElement {
	element.getFlexNode().StyleSetPadding(flex.EdgeTop, float32(padding))

	return element
}

func (element *TextElement) PaddingRight(padding float64) *TextElement {
	element.getFlexNode().StyleSetPadding(flex.EdgeRight, float32(padding))

	return element
}

func (element *TextElement) PaddingBottom(padding float64) *TextElement {
	element.getFlexNode().StyleSetPadding(flex.EdgeBottom, float32(padding))

	return element
}

func (element *TextElement) PaddingLeft(padding float64) *TextElement {
	element.getFlexNode().StyleSetPadding(flex.EdgeLeft, float32(padding))

	return element
}


func (element *TextElement) GetPaddingTop() float64 {
	return float64(element.getFlexNode().StyleGetPadding(flex.EdgeTop).Value)
}

func (element *TextElement) GetPaddingRight() float64 {
	return float64(element.getFlexNode().StyleGetPadding(flex.EdgeRight).Value)
}

func (element *TextElement) GetPaddingBottom() float64 {
	return float64(element.getFlexNode().StyleGetPadding(flex.EdgeBottom).Value)
}

func (element *TextElement) GetPaddingLeft() float64 {
	return float64(element.getFlexNode().StyleGetPadding(flex.EdgeLeft).Value)
}



func (element *TextElement) Padding(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		PaddingTop(top).
		PaddingRight(right).
		PaddingBottom(bottom).
		PaddingLeft(left)

	return element
}

func (element *TextElement) PaddingVertical(padding float64) *TextElement {
	element.
		PaddingTop(padding).
		PaddingBottom(padding)

	return element
}

func (element *TextElement) PaddingHorizontal(padding float64) *TextElement {
	element.
		PaddingLeft(padding).
		PaddingRight(padding)

	return element
}

func (element *TextElement) PaddingAll(padding float64) *TextElement {
	element.
		PaddingTop(padding).
		PaddingRight(padding).
		PaddingBottom(padding).
		PaddingLeft(padding)

	return element
}

func (element *TextElement) PaddingPercentTop(percent float64) *TextElement {
	element.getFlexNode().StyleSetPaddingPercent(flex.EdgeTop, float32(percent))

	return element
}

func (element *TextElement) PaddingPercentRight(percent float64) *TextElement {
	element.getFlexNode().StyleSetPaddingPercent(flex.EdgeRight, float32(percent))

	return element
}

func (element *TextElement) PaddingPercentBottom(percent float64) *TextElement {
	element.getFlexNode().StyleSetPaddingPercent(flex.EdgeBottom, float32(percent))

	return element
}

func (element *TextElement) PaddingPercentLeft(percent float64) *TextElement {
	element.getFlexNode().StyleSetPaddingPercent(flex.EdgeLeft, float32(percent))

	return element
}


func (element *TextElement) PaddingPercent(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		PaddingPercentTop(top).
		PaddingPercentRight(right).
		PaddingPercentBottom(bottom).
		PaddingPercentLeft(left)

	return element
}

func (element *TextElement) PaddingPercentVertical(percent float64) *TextElement {
	element.
		PaddingPercentTop(percent).
		PaddingPercentBottom(percent)

	return element
}

func (element *TextElement) PaddingPercentHorizontal(percent float64) *TextElement {
	element.
		PaddingPercentLeft(percent).
		PaddingPercentRight(percent)

	return element
}

func (element *TextElement) PaddingPercentAll(percent float64) *TextElement {
	element.
		PaddingPercentTop(percent).
		PaddingPercentRight(percent).
		PaddingPercentBottom(percent).
		PaddingPercentLeft(percent)

	return element
}

func (element *TextElement) BorderTop(border float64) *TextElement {
	element.getFlexNode().StyleSetBorder(flex.EdgeTop, float32(border))

	return element
}

func (element *TextElement) BorderRight(border float64) *TextElement {
	element.getFlexNode().StyleSetBorder(flex.EdgeRight, float32(border))

	return element
}

func (element *TextElement) BorderBottom(border float64) *TextElement {
	element.getFlexNode().StyleSetBorder(flex.EdgeBottom, float32(border))

	return element
}

func (element *TextElement) BorderLeft(border float64) *TextElement {
	element.getFlexNode().StyleSetBorder(flex.EdgeLeft, float32(border))

	return element
}


func (element *TextElement) Border(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		BorderTop(top).
		BorderRight(right).
		BorderBottom(bottom).
		BorderLeft(left)

	return element
}

func (element *TextElement) BorderVertical(border float64) *TextElement {
	element.
		BorderTop(border).
		BorderBottom(border)

	return element
}

func (element *TextElement) BorderHorizontal(border float64) *TextElement {
	element.
		BorderLeft(border).
		BorderRight(border)

	return element
}

func (element *TextElement) BorderAll(border float64) *TextElement {
	element.
		BorderTop(border).
		BorderRight(border).
		BorderBottom(border).
		BorderLeft(border)

	return element
}

func (element *TextElement) PositionTop(position float64) *TextElement {
	element.getFlexNode().StyleSetPosition(flex.EdgeTop, float32(position))

	return element
}

func (element *TextElement) PositionRight(position float64) *TextElement {
	element.getFlexNode().StyleSetPosition(flex.EdgeRight, float32(position))

	return element
}

func (element *TextElement) PositionBottom(position float64) *TextElement {
	element.getFlexNode().StyleSetPosition(flex.EdgeBottom, float32(position))

	return element
}

func (element *TextElement) PositionLeft(position float64) *TextElement {
	element.getFlexNode().StyleSetPosition(flex.EdgeLeft, float32(position))

	return element
}


func (element *TextElement) GetPositionTop() float64 {
	return float64(element.getFlexNode().StyleGetPosition(flex.EdgeTop).Value)
}

func (element *TextElement) GetPositionRight() float64 {
	return float64(element.getFlexNode().StyleGetPosition(flex.EdgeRight).Value)
}

func (element *TextElement) GetPositionBottom() float64 {
	return float64(element.getFlexNode().StyleGetPosition(flex.EdgeBottom).Value)
}

func (element *TextElement) GetPositionLeft() float64 {
	return float64(element.getFlexNode().StyleGetPosition(flex.EdgeLeft).Value)
}



func (element *TextElement) Position(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		PositionTop(top).
		PositionRight(right).
		PositionBottom(bottom).
		PositionLeft(left)

	return element
}

func (element *TextElement) PositionVertical(position float64) *TextElement {
	element.
		PositionTop(position).
		PositionBottom(position)

	return element
}

func (element *TextElement) PositionHorizontal(position float64) *TextElement {
	element.
		PositionLeft(position).
		PositionRight(position)

	return element
}

func (element *TextElement) PositionAll(position float64) *TextElement {
	element.
		PositionTop(position).
		PositionRight(position).
		PositionBottom(position).
		PositionLeft(position)

	return element
}

func (element *TextElement) PositionPercentTop(percent float64) *TextElement {
	element.getFlexNode().StyleSetPositionPercent(flex.EdgeTop, float32(percent))

	return element
}

func (element *TextElement) PositionPercentRight(percent float64) *TextElement {
	element.getFlexNode().StyleSetPositionPercent(flex.EdgeRight, float32(percent))

	return element
}

func (element *TextElement) PositionPercentBottom(percent float64) *TextElement {
	element.getFlexNode().StyleSetPositionPercent(flex.EdgeBottom, float32(percent))

	return element
}

func (element *TextElement) PositionPercentLeft(percent float64) *TextElement {
	element.getFlexNode().StyleSetPositionPercent(flex.EdgeLeft, float32(percent))

	return element
}


func (element *TextElement) PositionPercent(top float64, right float64, bottom float64, left float64) *TextElement {
	element.
		PositionPercentTop(top).
		PositionPercentRight(right).
		PositionPercentBottom(bottom).
		PositionPercentLeft(left)

	return element
}

func (element *TextElement) PositionPercentVertical(percent float64) *TextElement {
	element.
		PositionPercentTop(percent).
		PositionPercentBottom(percent)

	return element
}

func (element *TextElement) PositionPercentHorizontal(percent float64) *TextElement {
	element.
		PositionPercentLeft(percent).
		PositionPercentRight(percent)

	return element
}

func (element *TextElement) PositionPercentAll(percent float64) *TextElement {
	element.
		PositionPercentTop(percent).
		PositionPercentRight(percent).
		PositionPercentBottom(percent).
		PositionPercentLeft(percent)

	return element
}

