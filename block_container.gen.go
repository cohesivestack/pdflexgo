// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import "github.com/kjk/flex"

// CHILDREN

func (block *BlockElement) Children(children ...Node) *BlockElement {

	for _, child := range children {
		block.getFlexNode().InsertChild(child.getFlexNode(), len(block.getFlexNode().Children))
		block.children = append(block.children, child)
	}

	return block
}

// DIRECTION

func (block *BlockElement) Direction(direction Direction) *BlockElement {
	block.getFlexNode().StyleSetDirection(flex.Direction(direction))
	return block
}

func (block *BlockElement) DirectionInherit() *BlockElement {
	block.Direction(DirectionInherit)
	return block
}

func (block *BlockElement) DirectionLTR() *BlockElement {
	block.Direction(DirectionLTR)
	return block
}

func (block *BlockElement) DirectionRTL() *BlockElement {
	block.Direction(DirectionRTL)
	return block
}

// FLEX DIRECTION

func (block *BlockElement) FlexDirection(direction FlexDirection) *BlockElement {
	block.getFlexNode().StyleSetFlexDirection(flex.FlexDirection(direction))
	return block
}

func (block *BlockElement) FlexDirectionColumn() *BlockElement {
	block.FlexDirection(FlexDirectionColumn)
	return block
}

func (block *BlockElement) FlexDirectionColumnReverse() *BlockElement {
	block.FlexDirection(FlexDirectionColumnReverse)
	return block
}

func (block *BlockElement) FlexDirectionRow() *BlockElement {
	block.FlexDirection(FlexDirectionRow)
	return block
}

func (block *BlockElement) FlexDirectionRowReverse() *BlockElement {
	block.FlexDirection(FlexDirectionRowReverse)
	return block
}

// JustifyContent
func (block *BlockElement) JustifyContent(justification Justify) *BlockElement {
	block.getFlexNode().StyleSetJustifyContent(flex.Justify(justification))
	return block
}

func (block *BlockElement) JustifyContentStart() *BlockElement {
	block.JustifyContent(JustifyStart)
	return block
}

func (block *BlockElement) JustifyContentCenter() *BlockElement {
	block.JustifyContent(JustifyCenter)
	return block
}

func (block *BlockElement) JustifyContentEnd() *BlockElement {
	block.JustifyContent(JustifyEnd)
	return block
}

func (block *BlockElement) JustifyContentSpaceBetween() *BlockElement {
	block.JustifyContent(JustifySpaceBetween)
	return block
}

func (block *BlockElement) JustifyContentSpaceAround() *BlockElement {
	block.JustifyContent(JustifySpaceAround)
	return block
}

// ALIGN CONTENT

func (block *BlockElement) AlignContentType(align Align) *BlockElement {
	block.getFlexNode().StyleSetAlignContent(flex.Align(align))
	return block
}

func (block *BlockElement) AlignContentAuto() *BlockElement {
	block.AlignContentType(AlignAuto)
	return block
}

func (block *BlockElement) AlignContentStart() *BlockElement {
	block.AlignContentType(AlignStart)
	return block
}

func (block *BlockElement) AlignContentCenter() *BlockElement {
	block.AlignContentType(AlignCenter)
	return block
}

func (block *BlockElement) AlignContentEnd() *BlockElement {
	block.AlignContentType(AlignEnd)
	return block
}

func (block *BlockElement) AlignContentStretch() *BlockElement {
	block.AlignContentType(AlignStretch)
	return block
}

func (block *BlockElement) AlignContentBaseline() *BlockElement {
	block.AlignContentType(AlignBaseline)
	return block
}

func (block *BlockElement) AlignContentSpaceBetween() *BlockElement {
	block.AlignContentType(AlignSpaceBetween)
	return block
}

func (block *BlockElement) AlignContentSpaceAround() *BlockElement {
	block.AlignContentType(AlignSpaceAround)
	return block
}

// ALIGN ITEMS

func (block *BlockElement) AlignItemsType(align Align) *BlockElement {
	block.getFlexNode().StyleSetAlignItems(flex.Align(align))
	return block
}

func (block *BlockElement) AlignItemsAuto() *BlockElement {
	block.AlignItemsType(AlignAuto)
	return block
}

func (block *BlockElement) AlignItemsStart() *BlockElement {
	block.AlignItemsType(AlignStart)
	return block
}

func (block *BlockElement) AlignItemsCenter() *BlockElement {
	block.AlignItemsType(AlignCenter)
	return block
}

func (block *BlockElement) AlignItemsEnd() *BlockElement {
	block.AlignItemsType(AlignEnd)
	return block
}

func (block *BlockElement) AlignItemsStretch() *BlockElement {
	block.AlignItemsType(AlignStretch)
	return block
}

func (block *BlockElement) AlignItemsBaseline() *BlockElement {
	block.AlignItemsType(AlignBaseline)
	return block
}

func (block *BlockElement) AlignItemsSpaceBetween() *BlockElement {
	block.AlignItemsType(AlignSpaceBetween)
	return block
}

func (block *BlockElement) AlignItemsSpaceAround() *BlockElement {
	block.AlignItemsType(AlignSpaceAround)
	return block
}

// FLEX WRAP

func (block *BlockElement) FlexWrapValue(wrapValue Wrap) *BlockElement {
	block.getFlexNode().StyleSetFlexWrap(flex.Wrap(wrapValue))
	return block
}

func (block *BlockElement) FlexNoWrap() *BlockElement {
	block.FlexWrapValue(WrapNoWrap)
	return block
}

func (block *BlockElement) FlexWrap() *BlockElement {
	block.FlexWrapValue(WrapWrap)
	return block
}

func (block *BlockElement) FlexWrapReverse() *BlockElement {
	block.FlexWrapValue(WrapWrapReverse)
	return block
}
