// Code generated by PDFlexgo; DO NOT EDIT.
package pdflexgo

import "github.com/kjk/flex"

func (text *TextElement) Width(width float64) *TextElement {
	text.getFlexNode().StyleSetWidth(float32(width))
	return text
}

func (text *TextElement) Height(height float64) *TextElement {
	text.getFlexNode().StyleSetHeight(float32(height))
	return text
}

func (text *TextElement) WidthPercent(width float64) *TextElement {
	text.getFlexNode().StyleSetWidthPercent(float32(width))
	return text
}

func (text *TextElement) HeightPercent(height float64) *TextElement {
	text.getFlexNode().StyleSetHeightPercent(float32(height))

	return text
}

func (text *TextElement) WidthAuto() *TextElement {
	text.getFlexNode().StyleSetWidthAuto()
	return text
}

func (text *TextElement) HeightAuto() *TextElement {
	text.getFlexNode().StyleSetHeightAuto()

	return text
}

// ALIGN SELF

func (text *TextElement) AlignSelfType(align Align) *TextElement {
	text.getFlexNode().StyleSetAlignSelf(flex.Align(align))
	return text
}

func (text *TextElement) AlignSelfAuto() *TextElement {
	text.AlignSelfType(AlignAuto)
	return text
}

func (text *TextElement) AlignSelfStart() *TextElement {
	text.AlignSelfType(AlignStart)
	return text
}

func (text *TextElement) AlignSelfCenter() *TextElement {
	text.AlignSelfType(AlignCenter)
	return text
}

func (text *TextElement) AlignSelfEnd() *TextElement {
	text.AlignSelfType(AlignEnd)
	return text
}

func (text *TextElement) AlignSelfStretch() *TextElement {
	text.AlignSelfType(AlignStretch)
	return text
}

func (text *TextElement) AlignSelfBaseline() *TextElement {
	text.AlignSelfType(AlignBaseline)
	return text
}

func (text *TextElement) AlignSelfSpaceBetween() *TextElement {
	text.AlignSelfType(AlignSpaceBetween)
	return text
}

func (text *TextElement) AlignSelfSpaceAround() *TextElement {
	text.AlignSelfType(AlignSpaceAround)
	return text
}

// FLEX FUNCTIONS

func (text *TextElement) FlexGrow(flexGrow float64) *TextElement {
	text.getFlexNode().StyleSetFlexGrow(float32(flexGrow))
	return text
}

func (text *TextElement) FlexShrink(flexShrink float64) *TextElement {
	text.getFlexNode().StyleSetFlexShrink(float32(flexShrink))
	return text
}

func (text *TextElement) FlexBasis(flexBasis float64) *TextElement {
	text.getFlexNode().StyleSetFlexBasis(float32(flexBasis))
	return text
}

func (text *TextElement) FlexBasisPercent(flexBasisPercent float64) *TextElement {
	text.getFlexNode().StyleSetFlexBasisPercent(float32(flexBasisPercent))
	return text
}

func (text *TextElement) FlexBasisAuto() *TextElement {
	flex.NodeStyleSetFlexBasisAuto(text.getFlexNode())
	return text
}


func (text *TextElement) FlexAuto() *TextElement {
	return text.
		FlexGrow(1).
		FlexShrink(1).
		FlexBasisAuto()
}

func (text *TextElement) FlexNone() *TextElement {
	return text.
		FlexGrow(0).
		FlexShrink(0).
		FlexBasisAuto()
}

func (text *TextElement) MinWidth(minWidth float64) *TextElement {
	text.getFlexNode().StyleSetMinWidth(float32(minWidth))
	return text
}

func (text *TextElement) MinWidthPercent(minWidthPercent float64) *TextElement {
	text.getFlexNode().StyleSetMinWidthPercent(float32(minWidthPercent))
	return text
}

func (text *TextElement) MinHeight(minHeight float64) *TextElement {
	text.getFlexNode().StyleSetMinHeight(float32(minHeight))
	return text
}

func (text *TextElement) MinHeightPercent(minHeightPercent float64) *TextElement {
	text.getFlexNode().StyleSetMinHeightPercent(float32(minHeightPercent))
	return text
}

func (text *TextElement) MaxWidth(maxWidth float64) *TextElement {
	text.getFlexNode().StyleSetMaxWidth(float32(maxWidth))
	return text
}

func (text *TextElement) MaxWidthPercent(maxWidthPercent float64) *TextElement {
	text.getFlexNode().StyleSetMaxWidthPercent(float32(maxWidthPercent))
	return text
}

func (text *TextElement) MaxHeight(maxHeight float64) *TextElement {
	text.getFlexNode().StyleSetMaxHeight(float32(maxHeight))
	return text
}

func (text *TextElement) MaxHeightPercent(maxHeightPercent float64) *TextElement {
	text.getFlexNode().StyleSetMaxHeightPercent(float32(maxHeightPercent))
	return text
}

// ASPECT RATIO

func (text *TextElement) AspectRatio(ratio float64) *TextElement {
	text.getFlexNode().StyleSetAspectRatio(float32(ratio))
	return text
}

// POSITION TYPE

func (text *TextElement) PositionType(_type PositionType) *TextElement {
	text.getFlexNode().StyleSetPositionType(flex.PositionType(_type))

	return text
}

func (text *TextElement) PositionTypeRelative() *TextElement {
	text.PositionType(PositionTypeRelative)

	return text
}

func (text *TextElement) PositionTypeAbsolute() *TextElement {
	text.PositionType(PositionTypeAbsolute)

	return text
}

// POSITION  TYPE

func (text *TextElement) Position(_type PositionType) *TextElement {
	text.getFlexNode().StyleSetPositionType(flex.PositionType(_type))
	return text
}

// POSITION

func (text *TextElement) PositionTop(position float64) *TextElement {
	text.getFlexNode().StyleSetPosition(flex.EdgeTop, float32(position))
	return text
}

func (text *TextElement) PositionRight(position float64) *TextElement {
	text.getFlexNode().StyleSetPosition(flex.EdgeRight, float32(position))
	return text
}

func (text *TextElement) PositionBottom(position float64) *TextElement {
	text.getFlexNode().StyleSetPosition(flex.EdgeBottom, float32(position))
	return text
}

func (text *TextElement) PositionLeft(position float64) *TextElement {
	text.getFlexNode().StyleSetPosition(flex.EdgeLeft, float32(position))
	return text
}

func (text *TextElement) PositionAll(position float64) *TextElement {
	text.
		PositionTop(position).
		PositionRight(position).
		PositionBottom(position).
		PositionLeft(position)
	return text
}
